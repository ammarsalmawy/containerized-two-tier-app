name: Build and Push Docker Images to ECR

on:
  push:
    branches: [ "main" ]  # Trigger on merges to `main`

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}  # Your AWS account ID, e.g., 123456789012
  ECR_REPOSITORY_WEBAPP: webapp
  ECR_REPOSITORY_MYSQL: mysql

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and Push Webapp Image
      - name: Build Webapp Docker Image
        run: |
          docker build -t $ECR_REGISTRY.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_WEBAPP:latest -f Dockerfile .

      - name: Push Webapp Image to ECR
        run: |
          docker push $ECR_REGISTRY.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_WEBAPP:latest

      # Build and Push MySQL Image
      - name: Build MySQL Docker Image
        run: |
          docker build -t $ECR_REGISTRY.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_MYSQL:latest -f Dockerfile_mysql .

      - name: Push MySQL Image to ECR
        run: |
          docker push $ECR_REGISTRY.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_MYSQL:latest
